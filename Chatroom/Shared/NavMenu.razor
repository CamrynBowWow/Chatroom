@inject IConversationActions ConversationActions
@inject SharedService SharedService

<AuthorizeView>
    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
            @*Maybe make go to profile*@
            <h2 class="navbar-brand">@context.User.Identity.Name</h2>
            <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
    </div>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            @if (SharedService.NavMenuUserList != null)
            {
                @foreach (KeyValuePair<int, User> userConversation in SharedService.NavMenuUserList)
                {
                    <div class="nav-item px-3 nav-user-conversation">
                        <NavLink class="nav-link nav-link-width" href="@($"/userChat/{userConversation.Key.ToString()}/{userConversation.Value.UniqueName}/{Convert.ToBase64String(Encoding.UTF8.GetBytes(userConversation.Value.UserId.ToString()))}")">
                            <UserConversationButtonComponent UserConversation="userConversation.Value"></UserConversationButtonComponent>
                        </NavLink>
                        <button class="delete-button">
                            <span class="oi-x"></span>
                        </button>
                    </div>
                }
            }
        </nav>
    </div>
</AuthorizeView>

@code {
    private bool collapseNavMenu = true;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    private string sidClaim;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationState;
        var user = authState.User;

        sidClaim = user.FindFirstValue(ClaimTypes.Sid);

        SharedService.NavMenuUserList = await ConversationActions.GetConversations(new Guid(sidClaim));
    }
}
